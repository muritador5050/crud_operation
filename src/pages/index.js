import Head from "next/head";
import { useEffect, useState } from "react";
import axios from "axios";
import Link from "next/link";
import { RiDeleteBinLine } from "react-icons/ri";
import { BiEditAlt } from "react-icons/bi";
import { BsPersonAdd } from "react-icons/bs";

//HomePage
export default function Home() {
  const [data, setData] = useState([]);

  //Fetch Data From db.json File
  useEffect(() => {
    try {
      fetch("http://localhost:3004/users").then((res) =>
        res.json().then((data) => setData(data))
      );
    } catch (error) {
      console.log(error);
    }
  }, [data]);

  //Delete Data
  const handleDelete = (id) => {
    const confirm = window.confirm("Are you sure of this operation");
    if (confirm) {
      fetch("http://localhost:3004/users/" + id, {
        method: "DELETE",
      })
        .then((res) => res.text())
        .then((res) => console.log(res));
    }
    if (!confirm) {
      return data;
    }
    const deleteItem = data.filter((d, i) => d.id !== id);
    setData(deleteItem);
  };

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div>
        <Link href="/create">
          <button className="add-btn">
            <BsPersonAdd /> <br />
            <small> Add user</small>
          </button>
        </Link>
      </div>
      <table className="users-data">
        <thead>
          <tr>
            <th>Id</th>
            <th>Name</th>
            <th>Email</th>
            <th>Phone No</th>
            <th>Actions</th>
          </tr>
        </thead>
        <tbody>
          {data.map((d) => (
            <tr key={d.id}>
              <td>{d.id}</td>
              <td>{d.name}</td>
              <td>{d.email}</td>
              <td>{d.phone}</td>
              <td className="td-btn">
                <Link href={{ pathname: "/read", query: { id: d.id } }}>
                  <button className="btn-sub">Read</button>
                </Link>
                <Link href={{ pathname: "/update", query: { id: d.id } }}>
                  <button className="btn-sub">
                    <BiEditAlt />
                  </button>
                </Link>

                <button onClick={() => handleDelete(d.id)} className="btn-sub">
                  <RiDeleteBinLine />
                </button>
              </td>
            </tr>
          ))}
        </tbody>
      </table>

      {data.length === 0 && (
        <h1 style={{ textAlign: "center", margin: "2em", color: "#edf4f2" }}>
          No Data Available
        </h1>
      )}
    </>
  );
}
